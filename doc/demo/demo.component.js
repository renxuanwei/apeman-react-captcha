"use strict";

const React = require('react');

const ApCaptcha = require('../../lib/ap_captcha');

let Demo = React.createClass({
    displayName: 'Demo',

    getInitialState: function () {
        return {
            captchaSrc: "./images/mock-captcha.svg"
        };
    },
    render: function () {
        let s = this,
            state = s.state;
        return React.createElement(
            'div',
            null,
            React.createElement(ApCaptcha, { src: state.captchaSrc,
                refreshText: 'refresh',
                onRefresh: s.refreshCaptcha })
        );
    },
    refreshCaptcha: function () {
        let s = this;
        let time = new Date().getTime();
        console.log('refreshCaptcha', time);
        s.setState({
            captchaSrc: `./images/mock-captcha.svg?t=${ time }`
        });
    }
});

module.exports = Demo;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlbW8uY29tcG9uZW50LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7O0FBRWIsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDOztBQUUvQixNQUFNLFNBQVMsR0FBRyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQzs7QUFFbEQsSUFBSSxJQUFJLEdBQUcsS0FBSyxDQUFDLFdBQVcsQ0FBQzs7O0FBQ3pCLG1CQUFlLEVBQUUsWUFBWTtBQUN6QixlQUFPO0FBQ0gsc0JBQVUsRUFBRSwyQkFBMkI7U0FDMUMsQ0FBQTtLQUNKO0FBQ0QsVUFBTSxFQUFFLFlBQVk7QUFDaEIsWUFBSSxDQUFDLEdBQUcsSUFBSTtZQUNSLEtBQUssR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDO0FBQ3BCLGVBQ0k7OztZQUNJLG9CQUFDLFNBQVMsSUFBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLFVBQVUsQUFBQztBQUN0QiwyQkFBVyxFQUFDLFNBQVM7QUFDckIseUJBQVMsRUFBRSxDQUFDLENBQUMsY0FBYyxBQUFDLEdBQzNCO1NBQ1YsQ0FDUjtLQUNMO0FBQ0Qsa0JBQWMsRUFBRSxZQUFZO0FBQ3hCLFlBQUksQ0FBQyxHQUFHLElBQUksQ0FBQztBQUNiLFlBQUksSUFBSSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDaEMsZUFBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNwQyxTQUFDLENBQUMsUUFBUSxDQUFDO0FBQ1Asc0JBQVUsRUFBRSxDQUFDLDRCQUE0QixHQUFFLElBQUksRUFBQyxDQUFDO1NBQ3BELENBQUMsQ0FBQTtLQUNMO0NBQ0osQ0FBQyxDQUFDOztBQUVILE1BQU0sQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDIiwiZmlsZSI6ImRlbW8uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9va3VuaXNoaXRha2EvcHJvamVjdHMvYXBlbWFuLXJlYWN0LWxhYm8vYXBlbWFuLXJlYWN0LWNhcHRjaGEvZG9jL2RlbW8iLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG5jb25zdCBBcENhcHRjaGEgPSByZXF1aXJlKCcuLi8uLi9saWIvYXBfY2FwdGNoYScpO1xuXG5sZXQgRGVtbyA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGNhcHRjaGFTcmM6IFwiLi9pbWFnZXMvbW9jay1jYXB0Y2hhLnN2Z1wiXG4gICAgICAgIH1cbiAgICB9LFxuICAgIHJlbmRlcjogZnVuY3Rpb24gKCkge1xuICAgICAgICBsZXQgcyA9IHRoaXMsXG4gICAgICAgICAgICBzdGF0ZSA9IHMuc3RhdGU7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDxBcENhcHRjaGEgc3JjPXtzdGF0ZS5jYXB0Y2hhU3JjfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmcmVzaFRleHQ9XCJyZWZyZXNoXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uUmVmcmVzaD17cy5yZWZyZXNoQ2FwdGNoYX0+XG4gICAgICAgICAgICAgICAgPC9BcENhcHRjaGE+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9LFxuICAgIHJlZnJlc2hDYXB0Y2hhOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGxldCBzID0gdGhpcztcbiAgICAgICAgbGV0IHRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICAgICAgY29uc29sZS5sb2coJ3JlZnJlc2hDYXB0Y2hhJywgdGltZSk7XG4gICAgICAgIHMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgY2FwdGNoYVNyYzogYC4vaW1hZ2VzL21vY2stY2FwdGNoYS5zdmc/dD0ke3RpbWV9YFxuICAgICAgICB9KVxuICAgIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERlbW87Il19